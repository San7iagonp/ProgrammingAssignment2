{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
summary(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshold) {
corrVect <- c(NULL, NULL, NULL, NULL, NULL, NULL)
}
}
corrVect
}
cr <- corr("specdata",5000)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- c(NULL, NULL, NULL, NULL, NULL, NULL)
}
}
corrVect
}
cr <- corr("specdata",5000)
summary(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- c(corrVect)
}
}
corrVect
}
cr <- corr("specdata",5000)
summary(cr)
?c
c(1,2)
a <- c(1,2)
a
b <- c(a,2)
b
vector(NULL,NULL,NULL,NULL,NULL)
vector( , , , )
vector(1,2)
vector(2)
vector()
vector(1)
?vector
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- numeric(length(=0))
}
}
corrVect
}
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- numeric(length=0)
}
}
corrVect
}
cr <- corr("specdata",5000)
summary(cr)
cr <- corr("specdata",150)
summary(cr)
head(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- numeric()
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- vector(mode='numeric')
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector(mode='numeric')
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- numeric()
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector(mode='numeric')
for (i in 1:332)
{
nobs_list <- vector(mode='numeric')
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
}
else if (nobs_list < threshhold) {
corrVect <- numeric()
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
coutner <-1
counter <-1
counter <- counter +1
counter
counter <- counter +1
counter
counter <- 0
counter
corr <- function(directory, threshhold = 0)
{
files_list <- list.files(directory, full.names=TRUE)
corrVect <- vector()
counter <- 0
for (i in 1:332)
{
nobs_list <- vector()
dataset <- read.csv(files_list[i])
Remove_NA <- na.omit(dataset)
nobs_list <- c(nobs_list, nrow(Remove_NA))
if (nobs_list > threshhold) {
corrVect <- c(corrVect, cor(Remove_NA$sulfate, Remove_NA$nitrate))
counter <- counter +1
}
else if (nobs_list < threshhold && counter== 0) {
corrVect <- numeric()
}
}
corrVect
}
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
x <- (1,2)
x <- c(1,2)
x
as.list(x)
x <- list(a = 1:5, b=rnorm(10))
lapply(x,mean)
x
?median
lapply(x,median)
lapply(x,max)
runif(1)
runif(2)
x <- 1:5
lapply(x,runif)
lapply(x,runif, min=o, max = 10)
lapply(x,runif, min=0, max = 10)
?runif
lapply(x,runif(min=0, max = 10))
lapply(x,runif(x,min=0, max = 10))
x <- list(a= matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[,1])
?elt
lapply(x, function(elt) elt[,2])
lapply(x, function(snp) snp[,2])
lapply(x, function(snp) snp[1,2])
lapply(x, function(snp) snp[1,])
sapply(x, function(snp) snp[1,])
sapply(x,runif, min=0, max = 10)
sapply(x,mean)
str(apply)
x<- matrix(rnomr(200), 20,10)
apply(x,2,mean)
x<- matrix(rnorm(200), 20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,sum)
x<- matrix(rnorm(200), 20,10)
apply(x, 1, quantile, probs = c(0.25, 0.75))
apply(x, 1, quantile, probs = c(0, 0.25, 0.5, 0.75, 1))
a <- array(rnorm(2 *2 10), c(2, 2, 10))
a <- array(rnorm(2 *2 *10), c(2, 2, 10))
apply(a, c(1,2), mean)
rnorm(2*2*10)
rowMeans(a, dims=2)
rep(1,4)
mapply(rep, 1:4, 4;1)
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4, 4)
mapply(rep, 1:4, 4:4)
mapply(rep, 1, 4:1)
mapply(rep, 1:2, 4:1)
noise <- funciton(n, mean,sd) {rnofrm(n, mean, sd)}
mapply(noise, 1:5, 1:5, 2)
noise <- funciton(n, mean,sd){rnofrm(n, mean, sd)}
noise <- function(n, mean,sd){rnofrm(n, mean, sd)}
mapply(noise, 1:5, 1:5, 2)
noise <- function(n, mean,sd){rnorm(n, mean, sd)}
mapply(noise, 1:5, 1:5, 2)
x <- c(rnorm(10), runif(10), rnorm(10))
x
f <- gl(3,10)
f
gl (4,4)
tapply(x,f,mean)
tapply(x,f,mean, simplify=FALSE)
tapply(x,f, range)
split(x,f)
lapply(split(x,f),mean)
list.files
list.files()
airquality <- source("pollutantmean.R")
airquality
list.files
list.files()
Course1
source("Course1")
open("Course1")
Course1
"Course1"
list.files()
airquality <- read.csv("hw1_data.csv")
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s,function(x) colMeans(x[ ,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- g1(2,5)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x, list(f1,f2)))
str(split(x, list(f1,f2), drop=TRUE))
}
}
complete <- function(directory, id = 1:332) {
}
library(datasets)
data(iris)
?iris
str(iris)
sapply(iris, "virginica")
sappy(iris, Sepal.Lenght, "virginica")
sapply(iris, Sepal.Length, "virginica")
?apply
?iris
iris(1)
iris[1]
iris[5]
iris[5(3)]
iris[5("virginica")]
iris[5( ,3)]
iris[5(3,1)]
iris[5,"virginica"]
iris[5,3]
iris[5,101:150]
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
ii
s <- split(ii, ii$Species)
lapply(s, function(x) colMeans(x))
lapply(s, function(x) colMeans(x[,c("Sepal.Lenght")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
ii(1,2)
ii
ii[1,2]
ii[1,101:150]
ii[101:150,1]
m <- mean(ii[101:150,1])
m
apply(iris[,1:4],2,mean)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris[,1:4],1,mean)
str(apply)
?apply
iris[,1:4]
apply(iris[,1],2,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:2],2,mean)
apply(iris[,1],2,mean)
apply(iris[,],2,mean)
apply(iris[,2],2,mean)
apply(iris[,1:2],2,mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
cylinders <- split (mtcars, mtcars$cyl)
cylinders
apply(cylinders,2,mean)
cylinders[1,1]
cylinders[2,2]
cylinders[1,1,1]
mtcars[1,1]
mtcars[1,2]
apply(mtcars,2,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
with(mtcars,tapply(mpg,cyl,mean))
?with
mean(mtcars$mpg,mtcars$cyl)
tapply(mpg,cyl,mean)
?tapply
?with
mtcars("mpg")
mtcars
mtcars[,1]
tapply(mtcars[,1],mtcars[,2])
tapply(mtcars[,1],mtcars[,2],mean)
with(mtcars,tapply(mpg,cyl,mean))
?wtih
?with
with(iris,tapply(Sepal.Length,species,mean))
with(iris,tapply(Sepal.Length,Species,mean))
with(mtcars,tapply(hp,cyl,mean))
horse <- with(mtcars,tapply(hp,cyl,mean))
horse
horse(1)
horse(1,1)
horse[1,1]
horse[1]
horse[3]-horse[1]
debug(ls)
ls
n
?ls
undebug(ls)
undebug(ls)
m <- NULL
m
?make.matrix
?matrix
mat <- matrix(c(1,2,3, 11,12,13))
mat
mat <- matrix(c(1,2,3, 11,12,13), 2,3)
mat
solve(mat)
mat <- matrix(c(1:4),2,2)
mat
solve(mat)
list.files()
list.files()
ProgrammingAssignment2
"ProgrammingAssignment2"
list.files()
setwd("C:/Users/Santiago/Desktop/OnlineCourses/DataScience/ProgrammingAssignment2")
list.files()
matrix(1:4,2,2)
x=matrix(1:4,2,2)
x
environment()
search()
empty()
emptyenv()
baseenv()
get()
exists()
get(x)
get(a)
exists(a)
x <- 1
h <- function() {
y <- 2
i <- function () {}
}
x <- 1
h <- function() {
y <- 2
i <- function () {
z <- 3
c(x,y,z)
}
i()
}
h()
rm(x,h)
j <- function(x) {
y<-2
function() {
c(x,y)
}
}
k <- j(1)
k()
